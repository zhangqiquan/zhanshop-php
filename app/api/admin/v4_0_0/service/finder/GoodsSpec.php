<?php
// +----------------------------------------------------------------------
// | zhanshop-admin / goods_spec.php    [ 2023/3/4 18:30 ]
// +----------------------------------------------------------------------
// | Copyright (c) 2011~2023 zhangqiquan All rights reserved.
// +----------------------------------------------------------------------
// | Author: Administrator <768617998@qq.com>
// +----------------------------------------------------------------------
declare (strict_types=1);

namespace app\api\admin\v4_0_0\service\finder;

use zhanshop\App;
use zhanshop\Request;
use zhanshop\Response;

class GoodsSpec extends BaseFinder
{
    protected $headToolbar = [
        [
            'event' => 'add',
            'ico' => '&#xe608;',
            'title' => '添加',
            'method' => '',
            'page' => './goods/spec-add.html',
        ],
        [
            'event' => 'deletes',
            'ico' => '&#xe640;',
            'title' => '删除',
            'method' => '',
            'page' => '',
        ],
    ];

    protected $rowToolbar = [
        [
            'event' => 'edit',
            'ico' => '&#xe642;',
            'title' => '编辑',
            'method' => '',
            'page' => './goods/spec-edit.html',
        ],
        [
            'event' => 'delete',
            'ico' => '&#xe640;',
            'title' => '删除',
            'method' => '',
            'page' => '',
        ],
    ];

    public function posttable(Request &$request, Response &$response)
    {
        $post = $request->post('goods_item_spec');
        if(isset($post['options']) == false) App::error()->setError('选项值不能为空', 403);
        App::database()->transaction(function ($pdo) use ($post){
            $time = time();
            $id = App::database()->model("goods_item_spec")->insertGetId([
                'title' => $post['title'],
                'show_type' => $post['show_type'],
                'explain' => $post['explain'] ?? '',
                'create_time' => $time,
            ], $pdo);
            $saveAll = [];
            foreach($post['options'] as $v){
                $saveAll[] = [
                    'spec_id' => $id,
                    'title' => $v,
                    'create_time' => $time,
                ];
            }
            App::database()->model("goods_item_spec_value")->insertAll($saveAll, false, $pdo);
        });
        return [];
    }

    public function puttable(Request &$request, Response &$response)
    {
        $post = $request->post('goods_item_spec');
        $input = App::validate()->check($request->get(), [
            'pk' => 'Required',
        ]);
        $oldOptions = App::database()->model("goods_item_spec_value")->where(['spec_id' => $input['pk']])->column('title','id');
        App::database()->transaction(function ($pdo) use ($post, $input, $oldOptions){
            $time = time();
            App::database()->model("goods_item_spec")->where(['id' => $input['pk']])->update([
                'title' => $post['title'],
                'show_type' => $post['show_type'],
                'explain' => $post['explain'] ?? '',
            ], $pdo);
            $saveAll = [];
            foreach($post['options'] as $k => $v){
                // 如果重名
                if(in_array($v, $oldOptions)){
                    unset($oldOptions[$k]); // 销毁
                    App::database()->model("goods_item_spec_value")->where(['id' => $k, 'title' => $v])->update([
                        'delete_time' => 0,
                    ], $pdo);
                    continue;
                }
                if(isset($oldOptions[$k])){
                    App::database()->model("goods_item_spec_value")->where(['id' => $k, 'spec_id' => $input['pk']])->update([
                        'title' => $v,
                        'delete_time' => 0,
                    ], $pdo);
                    unset($oldOptions[$k]);
                    // 更新
                }else{
                    $saveAll[] = [
                        'spec_id' => $input['pk'],
                        'title' => $v,
                        'create_time' => $time,
                    ];
                }
            }
            if($saveAll) App::database()->model("goods_item_spec_value")->insertAll($saveAll, false, $pdo);
            if($oldOptions) App::database()->model("goods_item_spec_value")->whereIn('id', array_keys($oldOptions))->update([
                'delete_time' => $time,
            ]);
        });
        return $this->data(1, 1, [[$this->menuData['pk'], '=', $input['pk']]]);
    }

    public function editfromtable(Request &$request, Response &$response)
    {
        $data = parent::editfromtable($request); // TODO: Change the autogenerated stub
        $input = App::validate()->check($request->get(), [
            'pk' => 'Required',
        ]);
        $data[0]['schema']['options'] = [
            'default' => App::database()->model("goods_item_spec_value")->where(['spec_id' => $input['pk'], 'delete_time' => 0])->order('id asc')->column('title', 'id')
        ];
        return $data;
    }
}